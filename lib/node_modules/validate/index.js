'use strict';

// MODULES //

var isNumber = require( 'validate.io-number-primitive' ),
	contains = require( 'validate.io-contains' );


// VARIABLES //

var LEVELS = [
	'trace',
	'debug',
	'info',
	'warn',
	'error',
	'fatal'
];


// VALIDATE //

/**
* FUNCTION: validate( request, response, next )
*	Validates request parameters for setting the runtime log level.
*
* @param {Object} request - HTTP request object
* @param {Object} response - HTTP response object
* @param {Function} next - callback to invoke after validating
* @returns {void} undefined
*/
function validate( request, response, next ) {
	var level = request.body.level,
		error,
		msg;

	if (
		!isNumber( level ) &&
		!contains( LEVELS, level )
	) {
		msg = 'Invalid parameter. `level` should either be numeric or one of the following strings: [' + LEVELS.join( ', ' ) + ']. Value: `' + level + '`.';
		error = {
			'status': 400,
			'message': msg
		};
		return next( error );
	}
	next();
} // end FUNCTION validate()


// EXPORTS //

module.exports = validate;
